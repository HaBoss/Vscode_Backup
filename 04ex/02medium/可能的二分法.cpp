#include <bits/stdc++.h>
using namespace std;

bool possibleBipartition(int n, vector<vector<int>>& val) {
    unordered_map<int,vector<int>> hash;
    vector<int> res(n+1,0);
    for(int i=0; i<val.size(); ++i){
        hash[val[i][0]].push_back(val[i][1]);
    }
    
    int flag = -1; //1代表 红组，-1代表黑组

    for(int i=1; i<=n; ++i){
        if(hash.count(i) == 0)  continue;
        if(res[i] == 0)   res[i] = -flag;
        flag = -flag;
        
        for(auto &num : hash[i]){
            if(res[num] != flag){
                return false;
            }
            res[num] = flag;
        }
    }
    return true;
}

int main(){
    vector<vector<int>> dislike = {};
    int n = 4;
    cout << possibleBipartition(n,dislike);
}

/*
50
[[21,47],[4,41],[2,41],[36,42],[32,45],[26,28],[32,44],[5,41],[29,44],
[10,46],[1,6],[7,42],[46,49],[17,46],[32,35],[11,48],[37,48],[37,43],
[8,41],[16,22],[41,43],[11,27],[22,44],[22,28],[18,37],[5,11],[18,46],
[22,48],[1,17],[2,32],[21,37],[7,22],[23,41],[30,39],[6,41],[10,22],
[36,41],[22,25],[1,12],[2,11],[45,46],[2,22],[1,38],[47,50],[11,15],
[2,37],[1,43],[30,45],[4,32],[28,37],[1,21],[23,37],[5,37],[29,40],
[6,42],[3,11],[40,42],[26,49],[41,50],[13,41],[20,47],[15,26],[47,49],
[5,30],[4,42],[10,30],[6,29],[20,42],[4,37],[28,42],[1,16],[8,32],[16,29],
[31,47],[15,47],[1,5],[7,37],[14,47],[30,48],[1,10],[26,43],[15,46],[42,45],
[18,42],[25,42],[38,41],[32,39],[6,30],[29,33],[34,37],[26,38],[3,22],[18,47],
[42,48],[22,49],[26,34],[22,36],[29,36],[11,25],[41,44],[6,46],[13,22],[11,16],
[10,37],[42,43],[12,32],[1,48],[26,40],[22,50],[17,26],[4,22],[11,14],[26,39],[7,11],
[23,26],[1,20],[32,33],[30,33],[1,25],[2,30],[2,46],[26,45],[47,48],
[5,29],[3,37],[22,34],[20,22],[9,47],[1,4],[36,46],[30,49]...
*/